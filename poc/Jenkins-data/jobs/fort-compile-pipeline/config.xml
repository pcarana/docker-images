<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_DIR</name>
          <description></description>
          <defaultValue>/home/pcarana/git/FORT-test</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>pipeline {

    agent any

    stages {
        stage(&quot;Get local source&quot;) {
            steps {
                sh &apos;mkdir -p source&apos;
                sh &apos;cp -r $SOURCE_DIR/* source&apos;
            }
            post {
                failure {
                    sh &apos;echo &quot;Error getting source&apos;
                }
            }
        }
        stage(&quot;Build GCC 10&quot;) {
            steps {
                catchError(buildResult: &apos;SUCCESS&apos;, stageResult: &apos;FAILURE&apos;) {
                    sh &apos;docker run --rm -v $PWD/source:/source debian-gcc10:latest&apos;
                }
            }
        }
        stage(&quot;Build CLANG&quot;) {
            steps {
                catchError(buildResult: &apos;SUCCESS&apos;, stageResult: &apos;FAILURE&apos;) {
                    sh &apos;docker run --rm -v $PWD/source:/source debian-clang:latest&apos;
                }
            }
        }
        stage(&quot;Removing local copies&quot;) {
            steps {
                sh &apos;rm -Rf source&apos;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>